package org.insightcentre.converter.impl.protegen.structuralgenomics.impl.impl;


import java.util.Collection;

import org.insightcentre.converter.impl.protegen.structuralgenomics.impl.Sample_Name;
import org.insightcentre.converter.impl.protegen.structuralgenomics.impl.Vocabulary;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;
import org.protege.owl.codegeneration.inference.CodeGenerationInference;
import org.semanticweb.owlapi.model.IRI;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultSample_Name <br>
 * @version generated on Sat Oct 31 12:46:10 GMT 2015 by pc
 */
public class DefaultSample_Name extends WrappedIndividualImpl implements Sample_Name {

    public DefaultSample_Name(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Data Property http://cosmic.sels.insight.org/schema/structuralgenomicarrangements#SampleNameLiteral
     */
     
    public Collection<? extends Object> getSampleNameLiteral() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_SAMPLENAMELITERAL, Object.class);
    }

    public boolean hasSampleNameLiteral() {
		return !getSampleNameLiteral().isEmpty();
    }

    public void addSampleNameLiteral(Object newSampleNameLiteral) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_SAMPLENAMELITERAL, newSampleNameLiteral);
    }

    public void removeSampleNameLiteral(Object oldSampleNameLiteral) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_SAMPLENAMELITERAL, oldSampleNameLiteral);
    }


}
